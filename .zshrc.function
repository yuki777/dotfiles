# vim open session
function vimo(){
    vim "+OpenSession $1"
}

# http://qiita.com/jpshadowapps/items/3fbf817bdd14c48e2d54
function vip {
    vim $(grep -rin ${1} --include="*.php" | grep -v "[0-9]:\s*//" | peco | awk -F ":" '{print "-c "$2" "$1}')
}

function vit {
    vim $(grep -rin ${1} --include="*.twig" | grep -v "[0-9]:\s*//" | peco | awk -F ":" '{print "-c "$2" "$1}')
}

# ex : php-unserialize PhpSerialized.text
function php-unserialize() {
    php -r "print_r(unserialize(file_get_contents('$*')));"
}

# complete host
function print_known_hosts (){
    if [ -f $HOME/.ssh/known_hosts ]; then
        cat $HOME/.ssh/known_hosts|tr ',' ' '|cut -d' ' -f1|sort|uniq
    fi
}
_cache_hosts=($( print_known_hosts ))

# highlighter
# tail -f log | hi
# tail -f log | hi hoge
function hi(){
    if [ $# != 0 ];then
        clide -e /deprecate/i,fg=yellow -e /warn/i,fg=yellow -e /reject/i,fg=red -e /critical/i,fg=red -e /fail/i,fg=red -e /false/i,fg=red -e /err/i,fg=red,bold -e /fatal/i,fg=red,bold -e /\ 404\ /i,bold -e /\ 503\ /i,bold -e /yuki/i,bold -e /adachi/i,fg=blue,bg=yellow -e /$*/i,fg=green
    else
        clide -e /deprecate/i,fg=yellow -e /warn/i,fg=yellow -e /reject/i,fg=red -e /critical/i,fg=red -e /fail/i,fg=red -e /false/i,fg=red -e /err/i,fg=red,bold -e /fatal/i,fg=red,bold -e /\ 404\ /i,bold -e /\ 503\ /i,bold -e /yuki/i,bold -e /adachi/i,fg=blue,bg=yellow
    fi
}

function history-peco() {
  local tac_cmd
  if command -v tac >/dev/null 2>&1; then
    tac_cmd="tac"
  else
    tac_cmd="tail -r"
  fi
  BUFFER=$(history -n 1 | $tac_cmd | peco --query "$LBUFFER")
}
zle -N history-peco
bindkey '^r' history-peco

function peco-cdr() {
    local selected_dir=$(cdr -l | awk '{ print $2 }' | peco --query "$LBUFFER")
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        zle accept-line
    fi
    zle clear-screen
}
zle -N peco-cdr
bindkey '^u' peco-cdr

function peco-git-recent-branches() {
    local selected_branch=$(git for-each-ref --format='%(refname)' --sort=-committerdate refs/heads | \
        perl -pne 's{^refs/heads/}{}' | \
        peco --query "$LBUFFER")
    if [ -n "$selected_branch" ]; then
        BUFFER="git checkout ${selected_branch}"
        zle accept-line
    fi
    zle clear-screen
}
zle -N peco-git-recent-branches
bindkey "^b" peco-git-recent-branches

function json_escape(){
    printf '%s' "$1" | php -r 'echo json_encode(file_get_contents("php://stdin"));'
}

function e(){
    echo -n "$1" | base64
}

function d(){
    echo -n "$1" | base64 --decode
}

function urlencode(){
    php -r "echo urlencode('$1');"
}
function urldecode(){
    php -r "echo urldecode('$1');"
}

function bedrock-claude(){
	CLAUDE_CODE_USE_BEDROCK=1 AWS_REGION='us-east-1' AWS_PROFILE='3rd-bedrock-session' ANTHROPIC_MODEL='us.anthropic.claude-opus-4-1-20250805-v1:0' claude
	#CLAUDE_CODE_USE_BEDROCK=1 AWS_REGION='us-east-1' AWS_PROFILE='3rd-bedrock-session' ANTHROPIC_MODEL='us.anthropic.claude-opus-4-20250514-v1:0' claude
	#CLAUDE_CODE_USE_BEDROCK=1 AWS_REGION='us-east-1' AWS_PROFILE='3rd-bedrock-session' ANTHROPIC_MODEL='us.anthropic.claude-sonnet-4-20250514-v1:0' claude
}

# https://developers.google.com/search/docs/crawling-indexing/verifying-googlebot?hl=ja#manual
function is-googlebot-ip() {
    if [ $# -eq 0 ]; then
        echo "使用方法: is-googlebot-ip <IPアドレス> [IPアドレス2 ...]" >&2
        return 2  # 引数エラー
    fi
    local overall_status=0
    for target_ip in "$@"; do
        local domain=$(host $target_ip 2>/dev/null | grep -oE '[^ ]+\.(googlebot|google|googleusercontent)\.com\.$' | sed 's/\.$//')
        if [ -n "$domain" ] && host $domain 2>/dev/null | grep -q "has address $target_ip"; then
            echo "✅ $target_ip は正規のGooglebot IPです (Domain: $domain)"
        else
            echo "❌ $target_ip はGooglebot IPではありません"
            overall_status=1
        fi
    done
    return $overall_status
}
